{
	"name": "2_1_CreateSparkSession",
	"properties": {
		"activities": [
			{
				"name": "Log Create Spark Session Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Config].[usp_Loadlog]",
					"storedProcedureParameters": {
						"JobID": {
							"value": {
								"value": "@pipeline().parameters.JobID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"message": {
							"value": {
								"value": "@concat(pipeline().Pipeline, ' for JobId:',string(pipeline().parameters.JobId),' Started')",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipelinename": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SRC_Metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Wait Until Exquisition InProgress",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Log Create Spark Session Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('AcquisitionStatusSprak'),'Waiting')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Get Pending Acquisition",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "Select count(*) AS PendingCount from  [Config].[vwAcquisitionMetadata]  where JobID = @{pipeline().parameters.JobId} and status='InProgress'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_LS_SRC_Metadata",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "Set Acquisition Status",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Pending Acquisition",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "AcquisitionStatusSprak",
								"value": {
									"value": "@if(lessOrEquals(activity('Get Pending Acquisition').output.firstrow.PendingCount , 2),'Waiting','InProgress')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Wait",
							"type": "Wait",
							"dependsOn": [
								{
									"activity": "Set Acquisition Status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 30
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Log Create Spark Session End",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Wait Until Exquisition InProgress",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Config].[usp_Loadlog]",
					"storedProcedureParameters": {
						"JobID": {
							"value": {
								"value": "@pipeline().parameters.JobID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"message": {
							"value": {
								"value": "@concat(pipeline().Pipeline, ' for JobId:',string(pipeline().parameters.JobId),' Completed')",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipelinename": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SRC_Metadata",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"JobId": {
				"type": "Int"
			},
			"MetadataServerName": {
				"type": "string"
			},
			"MetadataDatabaseName": {
				"type": "string"
			}
		},
		"variables": {
			"AcquisitionStatusSprak": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Framework/Template/2_AcquisitionOrchestration"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-23T13:06:05Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}