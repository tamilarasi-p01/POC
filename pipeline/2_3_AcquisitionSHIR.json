{
	"name": "2_3_AcquisitionSHIR",
	"properties": {
		"activities": [
			{
				"name": "Switch-connectionType",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "If Delta Load",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.SourceType",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "azuresqlauth",
							"activities": [
								{
									"name": "Execute Pipeline_AzureSQLAuth",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2_3_4_AcquisitionSHIR_AzureSQLAuth",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceQuery": {
												"value": "@pipeline().parameters.SourceQuery",
												"type": "Expression"
											},
											"SourceServerName": {
												"value": "@pipeline().parameters.SourceServerName",
												"type": "Expression"
											},
											"SourceDatabaseName": {
												"value": "@pipeline().parameters.SourceDatabaseName",
												"type": "Expression"
											},
											"TargetContainer": {
												"value": "@pipeline().parameters.TargetContainer",
												"type": "Expression"
											},
											"TargetFolderPath": {
												"value": "@pipeline().parameters.TargetFolderPath",
												"type": "Expression"
											},
											"TargetFileName": {
												"value": "@pipeline().parameters.TargetFileName",
												"type": "Expression"
											},
											"QueryID": {
												"value": "@pipeline().parameters.QueryID",
												"type": "Expression"
											},
											"JobID": {
												"value": "@pipeline().parameters.JobID",
												"type": "Expression"
											},
											"MetadataServerName": {
												"value": "@pipeline().parameters.MetadataServerName",
												"type": "Expression"
											},
											"MetadataDatabaseName": {
												"value": "@pipeline().parameters.MetadataDatabaseName",
												"type": "Expression"
											},
											"SourceQueryDM": {
												"value": "@pipeline().parameters.SourceQueryDM",
												"type": "Expression"
											},
											"TargetAccountURL": {
												"value": "@pipeline().parameters.TargetAccountURL",
												"type": "Expression"
											},
											"KeyVaultURL": {
												"value": "@pipeline().parameters.KeyVaultURL",
												"type": "Expression"
											},
											"UserName": {
												"value": "@pipeline().parameters.UserName",
												"type": "Expression"
											},
											"SecretName": {
												"value": "@pipeline().parameters.SecretName",
												"type": "Expression"
											},
											"TargetFolderPathCSV": {
												"value": "@pipeline().parameters.TargetFolderPathCSV",
												"type": "Expression"
											},
											"TargetFileNameCSV": {
												"value": "@pipeline().parameters.TargetFileNameCSV",
												"type": "Expression"
											},
											"IsDelta": {
												"value": "@pipeline().parameters.IsDelta",
												"type": "Expression"
											},
											"DeltaValue": {
												"value": "@variables('DeltaValue')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Log Acquisition Entity Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Config].[usp_Loadlog]",
					"storedProcedureParameters": {
						"JobID": {
							"value": {
								"value": "@pipeline().parameters.JobID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"message": {
							"value": {
								"value": "@concat(pipeline().Pipeline, 'for JobId:',string(pipeline().parameters.JobID),'for QueryId:',string(pipeline().parameters.QueryID),' Started')",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipelinename": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SRC_Metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Acquisition Entity End",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Switch-connectionType",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Config].[usp_Loadlog]",
					"storedProcedureParameters": {
						"JobID": {
							"value": {
								"value": "@pipeline().parameters.JobID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"message": {
							"value": {
								"value": "@concat(pipeline().Pipeline, 'for JobId:',string(pipeline().parameters.JobID),'for QueryId:',string(pipeline().parameters.QueryID),' Completed')",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipelinename": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"rowcount": {
							"value": {
								"value": "@if(equals(variables('RowsCopied'),''),0,int(variables('RowsCopied')))",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SRC_Metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Log Acquisition Entity Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Switch-connectionType",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Config].[usp_Loadlog]",
					"storedProcedureParameters": {
						"JobID": {
							"value": {
								"value": "@pipeline().parameters.JobID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"message": {
							"value": {
								"value": "@concat(pipeline().Pipeline, 'for JobId:',string(pipeline().parameters.JobID), 'and QueryID',string(pipeline().parameters.QueryID), 'Failed with DQ Error')",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipelinename": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"rowcount": {
							"value": {
								"value": "@if(equals(variables('RowsCopied'),''),0,int(variables('RowsCopied')))",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SRC_Metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "If Delta Load",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Log Acquisition Entity Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@pipeline().parameters.IsDelta",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "usp_GetDeltaValue",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[Framework].[usp_GetDeltaValue]",
									"storedProcedureParameters": {
										"ColumnSchema": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.ColumnSchema",
												"type": "Expression"
											}
										},
										"DeltaDefaultValue": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.DeltaDefaultValue",
												"type": "Expression"
											}
										},
										"DeltaQuery": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.DeltaQuery",
												"type": "Expression"
											}
										},
										"IsExternalTableInSql": {
											"type": "Boolean",
											"value": {
												"value": "@pipeline().parameters.IsExternalTableInSql",
												"type": "Expression"
											}
										},
										"IsUnmanagedTableInSpark": {
											"type": "Boolean",
											"value": {
												"value": "@pipeline().parameters.IsUnmanagedTableInSpark",
												"type": "Expression"
											}
										},
										"LatestFilePath": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.LatestFilePath",
												"type": "Expression"
											}
										},
										"SchemaName": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.SparkDBName",
												"type": "Expression"
											}
										},
										"TableName": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.SourceTableName",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_LS_SRC_AzureSQLDWH",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": "dummy",
										"TableName": "dummy",
										"DBName": {
											"value": "@pipeline().parameters.SQLDWHDatabaseName",
											"type": "Expression"
										},
										"ServerName": {
											"value": "@pipeline().parameters.SQLDWHServerName",
											"type": "Expression"
										}
									}
								}
							}
						},
						{
							"name": "Set Delta Value",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "usp_GetDeltaValue",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "DeltaValue",
								"value": {
									"value": "@activity('usp_GetDeltaValue').output.firstrow.DeltaValue",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"SourceQuery": {
				"type": "string",
				"defaultValue": "SELECT [Delivery - Finance Geo Key] AS [FinanceGeoKey],[Delivery - Original Finance Geo Key] AS [OriginalFinanceGeoKey],[Delivery - Cost Center Code] AS [CostCenterCode],[Delivery - Cost Center Name] AS [CostCenterName],[Delivery - Profit Center Code] AS [ProfitCenterCode],[Delivery - Profit Center Name] AS [ProfitCenterName],[Delivery - Company Code] AS [CompanyCode],[Delivery - Country Code] AS [CountryCode],[Delivery - Country Name] AS [CountryName],[Delivery - Sales District Code] AS [SalesDistrictCode],[Delivery - Sales District Name] AS [SalesDistrictName],[Delivery - Sales Sublocation Code] AS [SalesSublocationCode],[Delivery - Sales Sublocation Name] AS [SalesSublocationName],[Delivery - Sales Location Code] AS [SalesLocationCode],[Delivery - Sales Location Name] AS [SalesLocationName],[Delivery - WW Subregion Code] AS [WWSubregionCode],[Delivery - WW Subregion Name] AS [WWSubregionName],[Delivery - WW Region Code] AS [WWRegionCode],[Delivery - WW Region Name] AS [WWRegionName],[Delivery - WW Area Code] AS [WWAreaCode],[Delivery - WW Area Name] AS [WWAreaName],[Delivery - Area Summary Code] AS [AreaSummaryCode],[Delivery - Area Summary Name] AS [AreaSummaryName],[Delivery - WW Timezone Area Name] AS [WWTimezoneAreaName],[Delivery - Cost Center Pool Name] AS [CostCenterPoolName],[Delivery - Cost Center Subpool Name] AS [CostCenterSubpoolName],[Delivery - Default Currency Code] AS [DefaultCurrencyCode],[Delivery - Subregion Cluster Name] AS [SubregionClusterName],[Delivery - Sales Location Cluster Name] AS [SalesLocationClusterName],[Delivery - Is Row Current Ind] AS [IsRowCurrentInd],[Delivery - Row Start Date] AS [RowStartDate],[Delivery - Row End Date] AS [RowEndDate],[Delivery - ORG Name] AS [ORGName],[Delivery - Finance WW Area Name] AS [FinanceWWAreaName],[Delivery - Finance WW Region Name] AS [FinanceWWRegionName],[Delivery - Finance WW Subregion Name] AS [FinanceWWSubregionName],[Delivery - Finance Sales Location Name] AS [FinanceSalesLocationName],[Delivery - Function Hierarchy Key] AS [FunctionHierarchyKey],[Delivery - ESACreatedDate] AS [ESWFirstInserted],[Delivery - ESAModifiedDate] AS [Delivery - ESAModifiedDate] FROM [dbo].[vwDeliveryFinanceGeographyDimension]  WHERE [Delivery - Sales Location Name] <> 'UNKNOWN'or ([Delivery - Sales Location Name] = 'UNKNOWN' AND [Delivery - WW Timezone Area Name]='No WW TimeZone Area')"
			},
			"SourceType": {
				"type": "string",
				"defaultValue": "OnPremSQL"
			},
			"SourceConnectionName": {
				"type": "string",
				"defaultValue": "ESAnalytics"
			},
			"SourceServerName": {
				"type": "string",
				"defaultValue": "ESALISTNR.redmond.corp.microsoft.com"
			},
			"SourceDatabaseName": {
				"type": "string",
				"defaultValue": "dbESAnalyticsMart_SS"
			},
			"ColumnSchema": {
				"type": "string",
				"defaultValue": "FinanceGeoKey:int,  Original Finance Geo Key:int,  Cost Center Code:nvarchar,  Cost Center Name:nvarchar,  Profit Center Code:nvarchar,  Profit Center Name:nvarchar,  Company Code:nvarchar,  Country Code:nvarchar,  Country Name:nvarchar,  Sales District Code:nvarchar,  Sales District Name:nvarchar,  Sales Sublocation Code:nvarchar,  Sales Sublocation Name:nvarchar,  Sales Location Code:nvarchar,  Sales Location Name:nvarchar,  WW Subregion Code:nvarchar,  WW Subregion Name:nvarchar,  WW Region Code:nvarchar,  WW Region Name:nvarchar,  WW Area Code:nvarchar,  WW Area Name:nvarchar,  Area Summary Code:nvarchar,  Area Summary Name:nvarchar,  WW Timezone Area Name:nvarchar,  Cost Center Pool Name:nvarchar,  Cost Center Subpool Name:nvarchar,  Default Currency Code:nvarchar,  Subregion Cluster Name:nvarchar,  Sales Location Cluster Name:nvarchar,  Is Row Current Ind:nchar,  Row Start Date:datetime,  Row End Date:datetime,  ORGName:nvarchar,  FinanceWWAreaName:nvarchar,  FinanceWWRegionName:nvarchar,  FinanceWWSubregionName:nvarchar,  FinanceSalesLocationName:nvarchar,  FunctionHierarchyKey:int,  ESWFirstInserted:datetime,  Delivery - ESAModifiedDate:datetime"
			},
			"SourceTableName": {
				"type": "string",
				"defaultValue": "FinanceGeographyDimension_CO"
			},
			"TargetContainer": {
				"type": "string",
				"defaultValue": "maidatalake"
			},
			"TargetFolderPath": {
				"type": "string",
				"defaultValue": "data/synapse/Common-ELTL/FinanceGeographyDimension_CO"
			},
			"TargetFileName": {
				"type": "string",
				"defaultValue": "FinanceGeographyDimension_CO20211009.parquet"
			},
			"QueryID": {
				"type": "int",
				"defaultValue": 59
			},
			"JobID": {
				"type": "int",
				"defaultValue": 68
			},
			"MetadataServerName": {
				"type": "string",
				"defaultValue": "maidevasql.database.windows.net"
			},
			"MetadataDatabaseName": {
				"type": "string",
				"defaultValue": "dbMetadata"
			},
			"SourceSchemaName": {
				"type": "string",
				"defaultValue": "dbo"
			},
			"SourceQueryDM": {
				"type": "string",
				"defaultValue": "SELECT TOP 1 [Delivery - Finance Geo Key] AS [FinanceGeoKey],[Delivery - Original Finance Geo Key] AS [OriginalFinanceGeoKey],[Delivery - Cost Center Code] AS [CostCenterCode],[Delivery - Cost Center Name] AS [CostCenterName],[Delivery - Profit Center Code] AS [ProfitCenterCode],[Delivery - Profit Center Name] AS [ProfitCenterName],[Delivery - Company Code] AS [CompanyCode],[Delivery - Country Code] AS [CountryCode],[Delivery - Country Name] AS [CountryName],[Delivery - Sales District Code] AS [SalesDistrictCode],[Delivery - Sales District Name] AS [SalesDistrictName],[Delivery - Sales Sublocation Code] AS [SalesSublocationCode],[Delivery - Sales Sublocation Name] AS [SalesSublocationName],[Delivery - Sales Location Code] AS [SalesLocationCode],[Delivery - Sales Location Name] AS [SalesLocationName],[Delivery - WW Subregion Code] AS [WWSubregionCode],[Delivery - WW Subregion Name] AS [WWSubregionName],[Delivery - WW Region Code] AS [WWRegionCode],[Delivery - WW Region Name] AS [WWRegionName],[Delivery - WW Area Code] AS [WWAreaCode],[Delivery - WW Area Name] AS [WWAreaName],[Delivery - Area Summary Code] AS [AreaSummaryCode],[Delivery - Area Summary Name] AS [AreaSummaryName],[Delivery - WW Timezone Area Name] AS [WWTimezoneAreaName],[Delivery - Cost Center Pool Name] AS [CostCenterPoolName],[Delivery - Cost Center Subpool Name] AS [CostCenterSubpoolName],[Delivery - Default Currency Code] AS [DefaultCurrencyCode],[Delivery - Subregion Cluster Name] AS [SubregionClusterName],[Delivery - Sales Location Cluster Name] AS [SalesLocationClusterName],[Delivery - Is Row Current Ind] AS [IsRowCurrentInd],[Delivery - Row Start Date] AS [RowStartDate],[Delivery - Row End Date] AS [RowEndDate],[Delivery - ORG Name] AS [ORGName],[Delivery - Finance WW Area Name] AS [FinanceWWAreaName],[Delivery - Finance WW Region Name] AS [FinanceWWRegionName],[Delivery - Finance WW Subregion Name] AS [FinanceWWSubregionName],[Delivery - Finance Sales Location Name] AS [FinanceSalesLocationName],[Delivery - Function Hierarchy Key] AS [FunctionHierarchyKey],[Delivery - ESACreatedDate] AS [ESWFirstInserted],[Delivery - ESAModifiedDate] AS [Delivery - ESAModifiedDate] FROM [dbo].[vwDeliveryFinanceGeographyDimension]  WHERE [Delivery - Sales Location Name] <> 'UNKNOWN'or ([Delivery - Sales Location Name] = 'UNKNOWN' AND [Delivery - WW Timezone Area Name]='No WW TimeZone Area')"
			},
			"TargetAccountURL": {
				"type": "string",
				"defaultValue": "https://maidevadls.dfs.core.windows.net"
			},
			"KeyVaultURL": {
				"type": "string",
				"defaultValue": "https://maiprodakv.vault.azure.net/"
			},
			"UserName": {
				"type": "string",
				"defaultValue": "esrfssys@microsoft.com"
			},
			"SecretName": {
				"type": "string",
				"defaultValue": "maiserviceaccountkey"
			},
			"TargetFolderPathCSV": {
				"type": "string",
				"defaultValue": "data/synapse/Common-ELTL/FinanceGeographyDimension_CO"
			},
			"TargetFileNameCSV": {
				"type": "string",
				"defaultValue": "FinanceGeographyDimension_CO.csv"
			},
			"IsDelta": {
				"type": "bool",
				"defaultValue": false
			},
			"DeltaDefaultValue": {
				"type": "string",
				"defaultValue": "1900-01-01"
			},
			"LatestFilePath": {
				"type": "string",
				"defaultValue": "abfss://maidatalake@maidevadls.dfs.core.windows.net/data/raw/202112220700/Common-ELTL/ESAnalytics/FinanceGeographyDimension_CO/FinanceGeographyDimension_CO.parquet"
			},
			"SparkDBName": {
				"type": "string",
				"defaultValue": "dbESAnalyticsStore"
			},
			"IsExternalTableInSql": {
				"type": "bool",
				"defaultValue": false
			},
			"IsUnmanagedTableInSpark": {
				"type": "bool",
				"defaultValue": true
			},
			"DeltaQuery": {
				"type": "string",
				"defaultValue": "SELECT MAX([Delivery - ESAModifiedDate]) FROM dbESAnalyticsStore.FinanceGeographyDimension_CO"
			},
			"SourceLinkedServiceName": {
				"type": "string",
				"defaultValue": "LS_NB_KustoSIRPEDE"
			},
			"SQLDWHServerName": {
				"type": "string",
				"defaultValue": "tcp:maidevsynapsews.sql.azuresynapse.net,1433"
			},
			"SQLDWHDatabaseName": {
				"type": "string",
				"defaultValue": "dbmaiinsights"
			}
		},
		"variables": {
			"RowsRead": {
				"type": "String"
			},
			"RowsCopied": {
				"type": "String"
			},
			"DeltaValue": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Framework/Template/2_AcquisitionOrchestration/2_3_Acquisition"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-19T09:33:23Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}