{
	"name": "4_1_PublishPriorityOrchestration",
	"properties": {
		"activities": [
			{
				"name": "Log Publish Priority Orchestration Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Config].[usp_Loadlog]",
					"storedProcedureParameters": {
						"JobID": {
							"value": {
								"value": "@pipeline().parameters.JobID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"message": {
							"value": {
								"value": "@concat(pipeline().Pipeline, ' for JobId:',string(pipeline().parameters.JobID),' with Priority :',string(pipeline().parameters.Priority),' Started')",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipelinename": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SRC_Metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get Priority Publish Metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Log Publish Priority Orchestration Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT DISTINCT PublishId,AvgMins\nFROM Config.vwPublishMetadata\nWHERE JobID = @{pipeline().parameters.JobID}\nAND Priority = @{pipeline().parameters.Priority}\nAND Status = 'Ready'\nORDER BY AvgMins DESC",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_LS_SRC_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Publish Orchestration",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Priority Publish Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Priority Publish Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 50,
					"activities": [
						{
							"name": "Execute Publish Delta",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Get Publish Metadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "4_2_PublishDelta",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"JobId": {
										"value": "@pipeline().parameters.JobID",
										"type": "Expression"
									},
									"MetaDataServerName": {
										"value": "@pipeline().parameters.MetadataServerName",
										"type": "Expression"
									},
									"MetaDataDatabaseName": {
										"value": "@pipeline().parameters.MetadataDatabaseName",
										"type": "Expression"
									},
									"PublishId": {
										"value": "@activity('Get Publish Metadata').output.firstRow.PublishId",
										"type": "Expression"
									},
									"SourceQueryType": {
										"value": "@activity('Get Publish Metadata').output.firstRow.SourceQueryType",
										"type": "Expression"
									},
									"SourceDBName": {
										"value": "@activity('Get Publish Metadata').output.firstRow.SourceDBName",
										"type": "Expression"
									},
									"SourceTableName": {
										"value": "@activity('Get Publish Metadata').output.firstRow.SourceTableName",
										"type": "Expression"
									},
									"SourceQuery": {
										"value": "@activity('Get Publish Metadata').output.firstRow.SourceQuery",
										"type": "Expression"
									},
									"SynapseDBName": {
										"value": "@activity('Get Publish Metadata').output.firstRow.SynapseDBName",
										"type": "Expression"
									},
									"TargetServerName": {
										"value": "@activity('Get Publish Metadata').output.firstRow.TargetServerName",
										"type": "Expression"
									},
									"TargetDBName": {
										"value": "@activity('Get Publish Metadata').output.firstRow.TargetDBName",
										"type": "Expression"
									},
									"TargetTableName": {
										"value": "@activity('Get Publish Metadata').output.firstRow.TargetTableName",
										"type": "Expression"
									},
									"TargetAccountURL": {
										"value": "@activity('Get Publish Metadata').output.firstRow.TargetAccountURL",
										"type": "Expression"
									},
									"TargetContainer": {
										"value": "@activity('Get Publish Metadata').output.firstRow.TargetContainer",
										"type": "Expression"
									},
									"TargetFolderPath": {
										"value": "@activity('Get Publish Metadata').output.firstRow.TargetFolderPath",
										"type": "Expression"
									},
									"TargetCSVFolderPath": {
										"value": "@activity('Get Publish Metadata').output.firstRow.TargetCSVFolderPath",
										"type": "Expression"
									},
									"ClusterName": {
										"value": "@activity('Get Publish Metadata').output.firstRow.ClusterName",
										"type": "Expression"
									},
									"NotebookName": {
										"value": "@activity('Get Publish Metadata').output.firstRow.NotebookName",
										"type": "Expression"
									},
									"SQLDWHServerName": {
										"value": "@pipeline().parameters.SQLDWHServerName",
										"type": "Expression"
									},
									"SQLDWHDatabaseName": {
										"value": "@pipeline().parameters.SQLDWHDatabaseName",
										"type": "Expression"
									},
									"IsTruncate": {
										"value": "@activity('Get Publish Metadata').output.firstRow.IsTruncate",
										"type": "Expression"
									},
									"LatestPublishPath": {
										"value": "@activity('Get Publish Metadata').output.firstRow.LatestPublishPath",
										"type": "Expression"
									},
									"PartitionColumn": {
										"value": "@activity('Get Publish Metadata').output.firstRow.PartitionColumn",
										"type": "Expression"
									},
									"DistributionColumn": {
										"value": "@activity('Get Publish Metadata').output.firstRow.DistributionColumn",
										"type": "Expression"
									},
									"SkipDWH": {
										"value": "@activity('Get Publish Metadata').output.firstRow.SkipDWH",
										"type": "Expression"
									},
									"ClusterSize": {
										"value": "@activity('Get Publish Metadata').output.firstRow.ClusterSize",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "UpdateStatus",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Execute Publish Delta",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Config].[usp_UpdateExecutionStatus]",
								"storedProcedureParameters": {
									"JobId": {
										"value": {
											"value": "@pipeline().parameters.JobID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"ExecutionTypeId": {
										"value": {
											"value": "@item().PublishId",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Status": {
										"value": {
											"value": "@if(equals(activity('Execute Publish Delta').status,'Failed'),'Failed','TableCreated')",
											"type": "Expression"
										},
										"type": "String"
									},
									"ExecutionType": {
										"value": "Publish",
										"type": "String"
									},
									"ErrorMessage": {
										"value": {
											"value": "@if(equals(activity('Execute Publish Delta').status,'Failed'),activity('Execute Publish Delta').error.message,null)",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunId": {
										"value": {
											"value": "@activity('Execute Publish Delta').output.pipelinerunid",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SRC_Metadata",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Get Publish Metadata",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT *\nFROM Config.vwPublishMetadata\nWHERE JobID = @{pipeline().parameters.JobID}\nAND Priority = @{pipeline().parameters.Priority}\nAND PublishId = @{item().PublishId}\nAND Status = 'Ready'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_LS_SRC_Metadata",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						}
					]
				}
			},
			{
				"name": "Log Publish Priority Orchestration End",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach Publish Orchestration",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Until Publish Completed",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[Config].[usp_Loadlog]",
					"storedProcedureParameters": {
						"JobID": {
							"value": {
								"value": "@pipeline().parameters.JobID",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"message": {
							"value": {
								"value": "@concat(pipeline().Pipeline, ' for JobId:',string(pipeline().parameters.JobID),' with Priority :',string(pipeline().parameters.Priority),' StartedCompleted')",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipelinename": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SRC_Metadata",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Until Publish Completed",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Get Priority Publish Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(int(variables('PendigCount')),0)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Get Pending Count",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "If Ready",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT\n    COUNT(1) AS PendingCount\nFROM [Config].[vwPublishMetadata]\nWHERE JobId = @{pipeline().parameters.JobID}\nAND Priority = @{pipeline().parameters.Priority}\nAND Status IN ('Ready','InProgress','TableCreated','SqlCopyStarted')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_LS_SRC_Metadata",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Set Pending Count",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Pending Count",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "PendigCount",
								"value": {
									"value": "@string(activity('Get Pending Count').output.firstRow.PendingCount)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Get Ready Count",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT\n    COUNT(1) AS ReadyCount\nFROM [Config].[vwPublishMetadata]\nWHERE JobId = @{pipeline().parameters.JobID}\nAND Priority = @{pipeline().parameters.Priority}\nAND Status IN ('TableCreated')\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_LS_SRC_Metadata",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Set Ready Count",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get Ready Count",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "ReadyCount",
								"value": {
									"value": "@string(activity('Get Ready Count').output.firstRow.ReadyCount)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Ready",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Set Ready Count",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(int(variables('ReadyCount')), 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 300
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Execute Publish Sql Priority Orchestration",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "4_1_PublishSqlPriorityOrchestration",
												"type": "PipelineReference"
											},
											"waitOnCompletion": false,
											"parameters": {
												"JobID": {
													"value": "@pipeline().parameters.JobID",
													"type": "Expression"
												},
												"MetadataServerName": {
													"value": "@pipeline().parameters.MetadataServerName",
													"type": "Expression"
												},
												"MetadataDatabaseName": {
													"value": "@pipeline().parameters.MetadataDatabaseName",
													"type": "Expression"
												},
												"Priority": {
													"value": "@pipeline().parameters.Priority",
													"type": "Expression"
												},
												"SQLDWHServerName": {
													"value": "@pipeline().parameters.SQLDWHServerName",
													"type": "Expression"
												},
												"SQLDWHDatabaseName": {
													"value": "@pipeline().parameters.SQLDWHDatabaseName",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "Wait for status update",
										"type": "Wait",
										"dependsOn": [
											{
												"activity": "Execute Publish Sql Priority Orchestration",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 600
										}
									}
								]
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			}
		],
		"parameters": {
			"JobID": {
				"type": "Int"
			},
			"MetadataServerName": {
				"type": "string"
			},
			"MetadataDatabaseName": {
				"type": "string"
			},
			"Priority": {
				"type": "int"
			},
			"SQLDWHServerName": {
				"type": "string"
			},
			"SQLDWHDatabaseName": {
				"type": "string"
			}
		},
		"variables": {
			"PendigCount": {
				"type": "String",
				"defaultValue": "-1"
			},
			"ReadyCount": {
				"type": "String",
				"defaultValue": "-1"
			}
		},
		"folder": {
			"name": "Framework/Template/4_PublishOrchestration"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-17T16:02:29Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}