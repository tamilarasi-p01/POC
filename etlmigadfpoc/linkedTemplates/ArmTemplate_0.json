{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "etlmigadfpoc"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"LS_SHIR_AzureSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SHIR_AzureSQL'"
		},
		"LS_SHIR_AzureSQLAuth_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SHIR_AzureSQLAuth'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().ServerName};Initial Catalog=@{linkedService().DatabaseName};User ID=@{linkedService().UserName}"
		},
		"LS_SRC_AzureSQLDWH_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SRC_AzureSQLDWH'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=etlmigpocws.sql.azuresynapse.net;Initial Catalog=etlmigpocDWH"
		},
		"LS_SRC_Metadata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SRC_Metadata'"
		},
		"LS_TGT_Metadata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_TGT_Metadata'"
		},
		"POCGithub_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'POCGithub'"
		},
		"etlmigpocws-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'etlmigpocws-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:etlmigpocws.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"LS_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().BaseURL}"
		},
		"LS_SHIR_ADLSGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://etlmigpocadls.dfs.core.windows.net/"
		},
		"LS_SHIR_CSV_ADLSGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().BaseURL}"
		},
		"POCGithub_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "azuser"
		},
		"etlmigpocws-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://etlmigpocadls.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3159771127157967.7.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "11.1.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"BaseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline 1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Notebook 1"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-02T12:15:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SHIR_ADLSGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_SHIR_ADLSGen2_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SHIR_AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SHIR_AzureSQL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SHIR_AzureSQLAuth')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ServerName": {
						"type": "string"
					},
					"DatabaseName": {
						"type": "string"
					},
					"UserName": {
						"type": "string"
					},
					"KeyVaultURL": {
						"type": "string"
					},
					"SecretName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SHIR_AzureSQLAuth_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KeyVault",
							"type": "LinkedServiceReference",
							"parameters": {
								"BaseURL": "@linkedService().KeyVaultURL"
							}
						},
						"secretName": {
							"value": "@linkedService().SecretName",
							"type": "Expression"
						}
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SHIR_CSV_ADLSGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"BaseURL": {
						"type": "string",
						"defaultValue": "https://etlmigpocadls.dfs.core.windows.net/"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_SHIR_CSV_ADLSGen2_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SRC_AzureSQLDWH')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ServerName": {
						"type": "string"
					},
					"DBName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('LS_SRC_AzureSQLDWH_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SRC_Metadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SRC_Metadata_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_TGT_Metadata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_TGT_Metadata_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/POCGithub')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('POCGithub_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('POCGithub_credential')]"
					},
					"encryptedCredential": "ew0KICAiVmVyc2lvbiI6ICIyMDE3LTExLTMwIiwNCiAgIlByb3RlY3Rpb25Nb2RlIjogIktleSIsDQogICJTZWNyZXRDb250ZW50VHlwZSI6ICJQbGFpbnRleHQiLA0KICAiQ3JlZGVudGlhbElkIjogIlNZTkFQU0VAOTg0NDAxQjktNjcxNi00Mjc4LTg5NEYtQkNDQ0VBRDY5NkZGXzc0YWNmZWFjLTQ3ZmQtNGUzZC1hM2Q5LTBkMTMwN2ZkZjhhYyINCn0="
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/etlmigpocws-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('etlmigpocws-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/etlmigpocws-WorkspaceDefaultStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('etlmigpocws-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_3_CreateIntegrateViews')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Log Integrate Start",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Config].[usp_Loadlog]",
							"storedProcedureParameters": {
								"JobID": {
									"value": {
										"value": "@pipeline().parameters.JobID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"message": {
									"value": {
										"value": "@concat(pipeline().Pipeline, ' for JobId:',string(pipeline().parameters.JobID),' execution type :',string(pipeline().parameters.ExecutionTypeNum),\n' and Priority:',string(pipeline().parameters.Priority),' and Integration Id:',string(pipeline().parameters.IntegrationId),' Started')",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SRC_Metadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Integrate End",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UpdateProcessPriority",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Config].[usp_Loadlog]",
							"storedProcedureParameters": {
								"JobID": {
									"value": {
										"value": "@pipeline().parameters.JobID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"message": {
									"value": {
										"value": "@concat(pipeline().Pipeline, ' for JobId:',string(pipeline().parameters.JobID),' execution type :',string(pipeline().parameters.ExecutionTypeNum),\n' and Priority:',string(pipeline().parameters.Priority),' and Integration Id:',string(pipeline().parameters.IntegrationId),' Completed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SRC_Metadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateIntegrateCurrentExecution",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Log Integrate Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Config].[usp_UpdateExecutionStatus]",
							"storedProcedureParameters": {
								"ExecutionTypeId": {
									"value": {
										"value": "@pipeline().parameters.IntegrationId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"JobId": {
									"value": {
										"value": "@pipeline().parameters.JobID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"Status": {
									"value": {
										"value": "InProgress",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecutionType": {
									"value": "Integration",
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SRC_Metadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "UpdateProcessPriority",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UpdateIntegrateCurrentExecution",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Config].[usp_UpdateProcessPriority]",
							"storedProcedureParameters": {
								"ProcessingId": {
									"value": {
										"value": "@pipeline().parameters.ProcessingId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProcessingType": {
									"value": {
										"value": "@pipeline().parameters.ProcessingType",
										"type": "Expression"
									},
									"type": "String"
								},
								"Priority": {
									"value": {
										"value": "@pipeline().parameters.i",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SRC_Metadata",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log Integrate Failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UpdateIntegrateCurrentExecution",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Config].[usp_Loadlog]",
							"storedProcedureParameters": {
								"JobID": {
									"value": {
										"value": "@pipeline().parameters.JobID",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"message": {
									"value": {
										"value": "@concat(pipeline().Pipeline, ' for JobId:',string(pipeline().parameters.JobID),' execution type :',string(pipeline().parameters.ExecutionTypeNum),\n' and Priority:',string(pipeline().parameters.Priority),' and Integration Id:',string(pipeline().parameters.IntegrationId),' Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelinename": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SRC_Metadata",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Priority": {
						"type": "int",
						"defaultValue": 1
					},
					"JobID": {
						"type": "int",
						"defaultValue": 70
					},
					"MetadataServerName": {
						"type": "string",
						"defaultValue": "maidevasql.database.windows.net"
					},
					"MetadataDatabaseName": {
						"type": "string",
						"defaultValue": "dbMetadata"
					},
					"ExecutionTypeNum": {
						"type": "int",
						"defaultValue": 2
					},
					"i": {
						"type": "int",
						"defaultValue": 1
					},
					"IntegrationId": {
						"type": "int",
						"defaultValue": 14953
					},
					"ExecutionName": {
						"type": "string",
						"defaultValue": "DQValidation"
					},
					"ExecutionParameters": {
						"type": "string",
						"defaultValue": {
							"path": "abfss://maidatalake@maidevadls.dfs.core.windows.net/data/processed/dbdqvalidation/validation_email",
							"dbname": "dbDQValidation",
							"tablename": "Validation_Email",
							"JobId": "70",
							"DQEntityId": "17",
							"TypeOfValidation": "Custom",
							"CurrentQuery": "Select case when Count(1)>0 then 'Y' else 'N' end AS Result from dbCommon.Reporting_ScorecardTargetsFact",
							"PreviousQuery": "",
							"HigherThreshold": "0",
							"LowerThreshold": "0",
							"JobName": "Common-ELTL",
							"IsActive": "1"
						}
					},
					"DBName": {
						"type": "string",
						"defaultValue": "dbmaiinsights"
					},
					"ProcessingId": {
						"type": "int",
						"defaultValue": 17
					},
					"ProcessingType": {
						"type": "string",
						"defaultValue": "SPARK_WITHPARAM"
					},
					"ClusterName": {
						"type": "string",
						"defaultValue": "maicommonc1"
					},
					"SQLDWHServerName": {
						"type": "string",
						"defaultValue": "tcp:maidevsynapsews.sql.azuresynapse.net,1433"
					},
					"SQLDWHDatabaseName": {
						"type": "string",
						"defaultValue": "dbmaiinsights"
					}
				},
				"folder": {
					"name": "Framework/Template/3_IntegrationOrchestration"
				},
				"annotations": [],
				"lastPublishTime": "2023-01-27T07:22:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SRC_Metadata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LS_SHIR_ADLSGen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "etlmigpocws-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/etlmigpocws-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_LS_SHIR_AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SHIR_AzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SHIR_AzureSQL')]"
			]
		}
	]
}